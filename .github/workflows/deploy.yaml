name: Deploy
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build and archive Docker images
        run: |
          for service in user-service order-service portfolio-service; do
            docker build -t $service:${{ github.sha }} -f $service/Dockerfile $service
            docker save $service:${{ github.sha }} | gzip > $service.tar.gz
          done

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22}}
          source: 'k8s/,*.tar.gz'
          target: '~/wolfstreet/'

      - name: Deploy on server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT || 22}}
          script: |
            set -e
            cd ~/wolfstreet

            # Load Docker images
            minikube image load user-service.tar.gz
            minikube image load order-service.tar.gz
            minikube image load portfolio-service.tar.gz

            # Delete archives
            rm *.tar.gz

            # Applying postgres manifest
            kubectl apply -f k8s/postgres/
            kubectl rollout status deployment/postgres-deployment --timeout=300s

            # Applying kafka manifest
            kubectl apply -f k8s/kafka/
            kubectl rollout status deployment/zookeeper-deployment --timeout=300s
            kubectl rollout status deployment/kafka-deployment --timeout=300s
            kubectl rollout status deployment/schema-registry-deployment --timeout=300s
            
            # Applying secrets
            kubectl apply -f k8s/common/
            
            #Applying services manifests
            kubectl apply -f k8s/services/

            # Setting images
            kubectl set image deployment/user-service-deployment user-service=user-service:${{ github.sha }}
            kubectl set image deployment/order-service-deployment order-service=order-service:${{ github.sha }}
            kubectl set image deployment/portfolio-service-deployment portfolio-service=portfolio-service:${{ github.sha }}

            # Service rollouts
            kubectl rollout status deployment/user-service-deployment --timeout=300s
            kubectl rollout status deployment/order-service-deployment --timeout=300s
            kubectl rollout status deployment/portfolio-service-deployment --timeout=300s

            # Apply ingress
            echo "Applying ingress..."
            kubectl apply -f k8s/ingress/
            
            # Getting pods for checking
            kubectl get pods
